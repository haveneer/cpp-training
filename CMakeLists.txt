cmake_minimum_required(VERSION 3.15)
project(cpp-training)

set(CMAKE_CXX_STANDARD 17)
add_definitions(-DDEBUG_TYPE)

add_executable(manage_test_crash tools/manage_test_crash.c)

message(STATUS "Use *.cpp file globbing")
file(GLOB SRCS "*.cpp")

enable_testing()
foreach(SRC_PATH ${SRCS})
  get_filename_component(SRC ${SRC_PATH} NAME)
  string(REGEX REPLACE ".cpp$" ".exe" EXE ${SRC})
  string(REGEX REPLACE ".cpp$" "" TEST ${SRC})
  file(GLOB HEADERS1_PATH "${TEST}.h*")
  file(GLOB HEADERS2_PATH "${TEST}-*.h*")
  set(HEADERS)
  if (HEADERS1_PATH OR HEADERS2_PATH)
    foreach(HEADER_PATH ${HEADERS1_PATH} ${HEADERS2_PATH})
      get_filename_component(HEADER ${HEADER_PATH} NAME)
      list(APPEND HEADERS ${HEADER})
    endforeach()
    message(STATUS "\tAdd example ${SRC} with ${HEADERS}")
  else()
    message(STATUS "\tAdd example ${SRC}")
  endif()

  add_executable(${EXE} ${SRC} ${HEADERS})

  set(WILL_FAIL_FOUND 0)
  string(FIND ${SRC} "-will_fail" WILL_FAIL_FOUND)
  if (${WILL_FAIL_FOUND} EQUAL "-1")
    add_test(NAME ${TEST} COMMAND ${EXE})
  else()
    add_test(NAME ${TEST} COMMAND manage_test_crash ${EXE})
    set_tests_properties(${TEST} PROPERTIES WILL_FAIL TRUE)
  endif()
endforeach()
